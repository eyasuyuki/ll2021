1. プログラム
 プログラム名: Language Update Python
 発表者名: 柴田淳(日本Pythonユーザ会)
 記録者名: 西山和広

2. 時間
 開始時刻: 11:05
 終了時刻: 11:31
  (質疑応答: 11:32 〜 11:35)

3. 発表の概要、論点
  1) What's Python?
  ・基本情報
  ・Pythonは潔い
  ・Pythonは癒す
  ・Pythonは裏切らない

  2) Language Update
  ・Python 2.0
  ・Python 2.1
  ・Python 2.2
  ・Python 2.3

4. 発表の流れ、内容
 Python Language Update
   * 質問大会:
     * ちょっとしたコードを書いたことある人: 結構いる(1/3)
     * 1000行以上書いたことがある人: ほとんどいない(数名以下)
       → ちょっと使ってみたけど踏み込めない
   * Pythonと言えばインデント
     * 他にも特徴を覚えて帰ってください
 1) What's Python?
   * Pythonは潔い
     もうちょっとPythonの特徴を語るに当たって3つのポイント
     * 言語使用がシンプルかつエレガント
       * 他の言語を知ってると習得が容易
     * 可読性が高い
       * コーディングスタイル標準を決めておかなくても統一される
       * チーム開発に適している
       * 外人が書いたPythonのコードはわかりやすい
     * 拡張性が高い
       * 言語の基本的な挙動をカスタマイズ可能
       * メソッドを実行中に入れ替えることができるなど
   * Pythonは癒す(1/2)
     * 生産性が高い
       * 特別な型を定義しなくても組込型だけですんでしまう
       * データ型を定義するためにクラスを定義する必要がほとんど無い
       * ソースの中に複雑なデータをリテラルとして直接記述できる
       * 普段は関数を定義していて、必要なときだけクラスを定義する使い方が可能
     * 対話モード
       * 開発効率が高くなる
       * ちょっとしたテストでファイルを作る必要がない
       * マルチウィンドウで編集できたりデバッガ(idle)がついていたりする
   * Pythonは癒す(2/2)
     * Jython(じゃいそん)
       * PythonのコードをServletで動かすことができる
       * Pythonの中にJavaのクラスを取り込んで継承することができる
       * コンパイルしてjarファイルにすることができる(サイズが大きくなる)
       * Pythonの変数として表現できる
         (ソースがないと説明しづらいので詳細は割愛)
   * Pythonは裏切らない
     * アップグレードするときに言語仕様にあまり変更が加わらない
     * 下位互換を持ちながら、機能拡張をするという試みが常に
     * バックワードコンパチビリティを重視
     * マルチプラットフォーム
       * ピュアpythonなら複数のプラットフォームで動く
       * shとCの間を目指してしていたが、もっと大規模なものがある
     * Zopeについてアンケート
       * 会場での知名度は1/4くらい
       * Zopeを使っているからPythonを使っているという人は少ない
     * アプリケーションのスクリプティング環境として採用されている
       * OpenOffice1.1, Mac OS X (Quartz)
 2) Language Update
   * Python 2.0
     * 開発の主体がCNRIから変わって、開発のスタイルが変わった
     * 1.6から一ヶ月しないうちに2.0のベータがリリースされている
   * Python 2.1
     * スコーピングルールの変更でPythonの暗黒面の1つが解消された
   * Python 2.2
     * リストやディクショナリは継承できなかった
       * Pythonの暗黒面の1つ
       * オブジェクト指向言語として正しくないと(悪口を)言われていた
     * Pythonの暗黒面がほぼ解消された
       * 清く正しいオブジェクト指向言語になったのではないか
   * Python 2.3
     * generatorが標準に
     * Boolean型がいままでなぜなかったのかはURL参照
     * Set
       * ソースコードはPythonのコードはこう書けばいいという
         サンプルソースにもなっている

5. 質疑応答・議論の流れ、内容

  Q芝田:
    インデントについて、参考書のソースコードでページが
    変わったときにわからなくなる。
  A:
    印刷されたものを読まないのでよくわからない
    コードはデータでみるとか、コピーして繋げてください。

  Q芝田: 日本語の取扱いについて一時期混乱があったようだが
  A:
    shift_jisを使うならshift_jis版を使うなど、
    それぞれのpythonを使ってください。

  Q山下:
    Pythonのイメージ
    LispやSchemeから括弧をとったのでインデントをしないと区切りがわからなくなって
    小うるさくなっているというイメージ
  A:
    * (宗教みたいなもので)気になってしまうのはどうしようもない
    * Parrotを使って何とかする(小飼弾さん)
    * インデントが気になるのをこえれば楽しい世界が。(宗教みたいという話の続きで会場笑い)


6. 発表の総括

7. 所感

 発表中は基本的にスライドの内容そのままが多かったので、記録しやすかったです。
 その分、2のPythonの歴史のうちスライドに載っていなかった1.6についての話や、発表後の質疑応答では急に全記録が必要になるのが大変でした。

 今までPythonとRubyは好みで使い分ければよさそうなものと言う印象でした。そして結局今もそういう印象のままです。

8. 特記事項 (オプション)
 (特になし)

$Id: p1-python.log,v 1.1 2004/03/24 04:00:35 ryuchi Exp $
